{"ast":null,"code":"var _jsxFileName = \"E:\\\\Summer Internsip Projects\\\\src\\\\context\\\\AuthContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  // Mock user data - replace with actual authentication logic\n  useEffect(() => {\n    // Simulate checking for existing authentication\n    const checkAuth = async () => {\n      try {\n        // Check localStorage or make API call to verify token\n        const savedUser = localStorage.getItem('user');\n        if (savedUser) {\n          const userData = JSON.parse(savedUser);\n          setUser(userData);\n          setIsAuthenticated(true);\n        }\n      } catch (error) {\n        console.error('Auth check failed:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    checkAuth();\n  }, []);\n  const login = async (email, password) => {\n    try {\n      // Mock login - replace with actual API call\n      const mockUser = {\n        id: 1,\n        name: 'John Doe',\n        email: email,\n        avatar: 'https://via.placeholder.com/40',\n        role: 'student'\n      };\n      setUser(mockUser);\n      setIsAuthenticated(true);\n      localStorage.setItem('user', JSON.stringify(mockUser));\n      return {\n        success: true,\n        user: mockUser\n      };\n    } catch (error) {\n      console.error('Login failed:', error);\n      return {\n        success: false,\n        error: error.message\n      };\n    }\n  };\n  const signup = async userData => {\n    try {\n      // Mock signup - replace with actual API call\n      const newUser = {\n        id: Date.now(),\n        name: userData.name,\n        email: userData.email,\n        avatar: 'https://via.placeholder.com/40',\n        role: 'student'\n      };\n      setUser(newUser);\n      setIsAuthenticated(true);\n      localStorage.setItem('user', JSON.stringify(newUser));\n      return {\n        success: true,\n        user: newUser\n      };\n    } catch (error) {\n      console.error('Signup failed:', error);\n      return {\n        success: false,\n        error: error.message\n      };\n    }\n  };\n  const logout = () => {\n    setUser(null);\n    setIsAuthenticated(false);\n    localStorage.removeItem('user');\n  };\n  const updateProfile = async updatedData => {\n    try {\n      const updatedUser = {\n        ...user,\n        ...updatedData\n      };\n      setUser(updatedUser);\n      localStorage.setItem('user', JSON.stringify(updatedUser));\n      return {\n        success: true,\n        user: updatedUser\n      };\n    } catch (error) {\n      console.error('Profile update failed:', error);\n      return {\n        success: false,\n        error: error.message\n      };\n    }\n  };\n  const value = {\n    user,\n    isAuthenticated,\n    loading,\n    login,\n    signup,\n    logout,\n    updateProfile\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"xBgiRagNfQVCfEr2dT2PptfN+TE=\");\n_c = AuthProvider;\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","loading","setLoading","isAuthenticated","setIsAuthenticated","checkAuth","savedUser","localStorage","getItem","userData","JSON","parse","error","console","login","email","password","mockUser","id","name","avatar","role","setItem","stringify","success","message","signup","newUser","Date","now","logout","removeItem","updateProfile","updatedData","updatedUser","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/Summer Internsip Projects/src/context/AuthContext.jsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n\r\n  // Mock user data - replace with actual authentication logic\r\n  useEffect(() => {\r\n    // Simulate checking for existing authentication\r\n    const checkAuth = async () => {\r\n      try {\r\n        // Check localStorage or make API call to verify token\r\n        const savedUser = localStorage.getItem('user');\r\n        if (savedUser) {\r\n          const userData = JSON.parse(savedUser);\r\n          setUser(userData);\r\n          setIsAuthenticated(true);\r\n        }\r\n      } catch (error) {\r\n        console.error('Auth check failed:', error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    checkAuth();\r\n  }, []);\r\n\r\n  const login = async (email, password) => {\r\n    try {\r\n      // Mock login - replace with actual API call\r\n      const mockUser = {\r\n        id: 1,\r\n        name: 'John Doe',\r\n        email: email,\r\n        avatar: 'https://via.placeholder.com/40',\r\n        role: 'student'\r\n      };\r\n\r\n      setUser(mockUser);\r\n      setIsAuthenticated(true);\r\n      localStorage.setItem('user', JSON.stringify(mockUser));\r\n      \r\n      return { success: true, user: mockUser };\r\n    } catch (error) {\r\n      console.error('Login failed:', error);\r\n      return { success: false, error: error.message };\r\n    }\r\n  };\r\n\r\n  const signup = async (userData) => {\r\n    try {\r\n      // Mock signup - replace with actual API call\r\n      const newUser = {\r\n        id: Date.now(),\r\n        name: userData.name,\r\n        email: userData.email,\r\n        avatar: 'https://via.placeholder.com/40',\r\n        role: 'student'\r\n      };\r\n\r\n      setUser(newUser);\r\n      setIsAuthenticated(true);\r\n      localStorage.setItem('user', JSON.stringify(newUser));\r\n      \r\n      return { success: true, user: newUser };\r\n    } catch (error) {\r\n      console.error('Signup failed:', error);\r\n      return { success: false, error: error.message };\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    setUser(null);\r\n    setIsAuthenticated(false);\r\n    localStorage.removeItem('user');\r\n  };\r\n\r\n  const updateProfile = async (updatedData) => {\r\n    try {\r\n      const updatedUser = { ...user, ...updatedData };\r\n      setUser(updatedUser);\r\n      localStorage.setItem('user', JSON.stringify(updatedUser));\r\n      return { success: true, user: updatedUser };\r\n    } catch (error) {\r\n      console.error('Profile update failed:', error);\r\n      return { success: false, error: error.message };\r\n    }\r\n  };\r\n\r\n  const value = {\r\n    user,\r\n    isAuthenticated,\r\n    loading,\r\n    login,\r\n    signup,\r\n    logout,\r\n    updateProfile\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthContext;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}