{"ast":null,"code":"var _jsxFileName = \"E:\\\\Summer Internsip Projects\\\\src\\\\context\\\\AuthContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\n\n// Create the AuthContext\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\n\n// Custom hook to use the AuthContext\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\n// AuthProvider component\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  // Mock user data for development\n  useEffect(() => {\n    // Simulate loading user data\n    setTimeout(() => {\n      const mockUser = {\n        id: 1,\n        name: 'Alex Johnson',\n        email: 'alex@example.com',\n        avatar: 'üë®‚Äçüíª',\n        role: 'student'\n      };\n      setUser(mockUser);\n      setIsAuthenticated(true);\n      setLoading(false);\n    }, 1000);\n  }, []);\n  const login = async (email, password) => {\n    setLoading(true);\n    try {\n      // Mock login API call\n      const mockUser = {\n        id: 1,\n        name: 'Alex Johnson',\n        email: email,\n        avatar: 'üë®‚Äçüíª',\n        role: 'student'\n      };\n      setUser(mockUser);\n      setIsAuthenticated(true);\n      return {\n        success: true\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: 'Login failed'\n      };\n    } finally {\n      setLoading(false);\n    }\n  };\n  const logout = () => {\n    setUser(null);\n    setIsAuthenticated(false);\n  };\n  const signup = async (name, email, password) => {\n    setLoading(true);\n    try {\n      // Mock signup API call\n      const mockUser = {\n        id: 1,\n        name: name,\n        email: email,\n        avatar: 'üë®‚Äçüíª',\n        role: 'student'\n      };\n      setUser(mockUser);\n      setIsAuthenticated(true);\n      return {\n        success: true\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: 'Signup failed'\n      };\n    } finally {\n      setLoading(false);\n    }\n  };\n  const value = {\n    user,\n    isAuthenticated,\n    loading,\n    login,\n    logout,\n    signup\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"xBgiRagNfQVCfEr2dT2PptfN+TE=\");\n_c = AuthProvider;\nexport { AuthContext };\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","loading","setLoading","isAuthenticated","setIsAuthenticated","setTimeout","mockUser","id","name","email","avatar","role","login","password","success","error","logout","signup","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/Summer Internsip Projects/src/context/AuthContext.jsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\n\r\n// Create the AuthContext\r\nconst AuthContext = createContext();\r\n\r\n// Custom hook to use the AuthContext\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\n// AuthProvider component\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n\r\n  // Mock user data for development\r\n  useEffect(() => {\r\n    // Simulate loading user data\r\n    setTimeout(() => {\r\n      const mockUser = {\r\n        id: 1,\r\n        name: 'Alex Johnson',\r\n        email: 'alex@example.com',\r\n        avatar: 'üë®‚Äçüíª',\r\n        role: 'student'\r\n      };\r\n      \r\n      setUser(mockUser);\r\n      setIsAuthenticated(true);\r\n      setLoading(false);\r\n    }, 1000);\r\n  }, []);\r\n\r\n  const login = async (email, password) => {\r\n    setLoading(true);\r\n    try {\r\n      // Mock login API call\r\n      const mockUser = {\r\n        id: 1,\r\n        name: 'Alex Johnson',\r\n        email: email,\r\n        avatar: 'üë®‚Äçüíª',\r\n        role: 'student'\r\n      };\r\n      \r\n      setUser(mockUser);\r\n      setIsAuthenticated(true);\r\n      return { success: true };\r\n    } catch (error) {\r\n      return { success: false, error: 'Login failed' };\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    setUser(null);\r\n    setIsAuthenticated(false);\r\n  };\r\n\r\n  const signup = async (name, email, password) => {\r\n    setLoading(true);\r\n    try {\r\n      // Mock signup API call\r\n      const mockUser = {\r\n        id: 1,\r\n        name: name,\r\n        email: email,\r\n        avatar: 'üë®‚Äçüíª',\r\n        role: 'student'\r\n      };\r\n      \r\n      setUser(mockUser);\r\n      setIsAuthenticated(true);\r\n      return { success: true };\r\n    } catch (error) {\r\n      return { success: false, error: 'Signup failed' };\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const value = {\r\n    user,\r\n    isAuthenticated,\r\n    loading,\r\n    login,\r\n    logout,\r\n    signup\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport { AuthContext };\r\nexport default AuthContext;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}